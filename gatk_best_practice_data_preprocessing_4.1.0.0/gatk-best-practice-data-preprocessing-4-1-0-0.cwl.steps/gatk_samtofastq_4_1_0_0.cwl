cwlVersion: v1.0
class: CommandLineTool
label: GATK SamToFastq
doc: |-
  The **GATK SamToFastq** tool converts a SAM or BAM file to FASTQ.

  This tool extracts read sequences and qualities from the input SAM/BAM file and writes them into the output file in Sanger FASTQ format.

  In the RC mode (default is True), if the read is aligned and the alignment is to the reverse strand on the genome, the read sequence from input SAM file will be reverse-complemented prior to writing it to FASTQ in order to correctly restore the original read sequence as it was generated by the sequencer [1].

  *A list of **all inputs and parameters** with corresponding descriptions can be found at the bottom of the page.*

  ###Common Use Cases

  * The **GATK SamToFastq** tool requires a BAM/SAM file on its **Input BAM/SAM file** (`--INPUT`) input. The tool generates a single-end FASTQ file on its **Output FASTQ file(s)** output if the input BAM/SAM file is single end. In case the input file is paired end, the tool outputs the first end of the pair FASTQ and the second end of the pair FASTQ on its **Output FASTQ file(s)** output, except when the **Interleave** (`--INTERLEAVE`) option is set to True. If the output is an interleaved FASTQ file, if paired, each line will have /1 or /2 to describe which end it came from.

  * The **GATK SamToFastq** tool supports an optional parameter  **Output by readgroup** (`--OUTPUT_BY_READGROUP`) which, when true, outputs a FASTQ file per read group (two FASTQ files per read group if the group is paired).

  * Usage example (input BAM file is single-end):

  ```
  gatk SamToFastq 
       --INPUT input.bam
       --FASTQ output.fastq
  ```





  * Usage example (input BAM file is paired-end):

  ```
  gatk SamToFastq 
       --INPUT input.bam
       --FASTQ output.pe_1.fastq
       --SECOND_END_FASTQ output.pe_2.fastq
       --UNPAIRED_FASTQ unpaired.fastq

  ```

  ###Changes Introduced by Seven Bridges

  * The GATK SamToFastq tool is implemented to check if the input alignments file contains single-end or paired-end data and according to that generates different command lines for these two modes and thus produces appropriate output files on its **Output FASTQ file(s)** output (one FASTQ file in single-end mode and two FASTQ files if the input alignment file contains paired-end data). 

  * All output files will be prefixed using the **Output prefix** parameter. In case the **Output prefix** is not provided, the output prefix will be the same as the Sample ID metadata from the **input SAM/BAM file**, if the Sample ID metadata exists. Otherwise, the output prefix will be inferred from the **Input SAM/BAM** filename. This way, having identical names of the output files between runs is avoided.

  * For paired-end read files, in order to successfully run alignment with STAR, this tool adds the appropriate **paired-end** metadata field in the output FASTQ files.

  ###Common Issues and Important Notes

  * None

  ###Performance Benchmarking

  Below is a table describing runtimes and task costs of **GATK SamToFastq** for a couple of different samples, executed on the AWS cloud instances:

  | Experiment type |  Input size | Paired-end | # of reads | Read length | Duration |  Cost | Instance (AWS) | 
  |:--------------:|:------------:|:--------:|:-------:|:---------:|:----------:|:------:|:------:|
  |     RNA-Seq     |  1.9 GB |     Yes    |     16M     |     101     |   4min   | ~0.03$ | c4.2xlarge (8 CPUs) | 
  |     RNA-Seq     |  5.7 GB |     Yes    |     50M     |     101     |   7min   | ~0.04$ | c4.2xlarge (8 CPUs) | 
  |     RNA-Seq     | 9.5 GB |     Yes    |     82M    |     101     |  10min  | ~0.07$ | c4.2xlarge (8 CPUs) | 
  |     RNA-Seq     | 19 GB |     Yes    |     164M    |     101     |  20min  | ~0.13$ | c4.2xlarge (8 CPUs) |

  *Cost can be significantly reduced by using **spot instances**. Visit the [Knowledge Center](https://docs.sevenbridges.com/docs/about-spot-instances) for more details.*


  ###References

  [1] [GATK SamToFastq](https://software.broadinstitute.org/gatk/documentation/tooldocs/4.0.12.0/picard_sam_SamToFastq)
$namespaces:
  sbg: https://sevenbridges.com

requirements:
- class: ShellCommandRequirement
- class: ResourceRequirement
  coresMin: "${\n    return inputs.cpu_per_job ? inputs.cpu_per_job : 1;\n}"
  ramMin: |-
    ${
        var memory = 4096;
        if (inputs.memory_per_job) 
        {
            memory = inputs.memory_per_job;
        }
        if (inputs.memory_overhead_per_job)
        {
            memory += inputs.memory_overhead_per_job;
        }
        return memory;
    }
- class: DockerRequirement
  dockerPull: images.sbgenomics.com/stefan_stojanovic/gatk:4.1.0.0
- class: InitialWorkDirRequirement
  listing: []
- class: InlineJavascriptRequirement
  expressionLib:
  - |-
    var updateMetadata = function(file, key, value) {
        file['metadata'][key] = value;
        return file;
    };


    var setMetadata = function(file, metadata) {
        if (!('metadata' in file))
            file['metadata'] = metadata;
        else {
            for (var key in metadata) {
                file['metadata'][key] = metadata[key];
            }
        }
        return file
    };

    var inheritMetadata = function(o1, o2) {
        var commonMetadata = {};
        if (!Array.isArray(o2)) {
            o2 = [o2]
        }
        for (var i = 0; i < o2.length; i++) {
            var example = o2[i]['metadata'];
            for (var key in example) {
                if (i == 0)
                    commonMetadata[key] = example[key];
                else {
                    if (!(commonMetadata[key] == example[key])) {
                        delete commonMetadata[key]
                    }
                }
            }
        }
        if (!Array.isArray(o1)) {
            o1 = setMetadata(o1, commonMetadata)
        } else {
            for (var i = 0; i < o1.length; i++) {
                o1[i] = setMetadata(o1[i], commonMetadata)
            }
        }
        return o1;
    };

    var toArray = function(file) {
        return [].concat(file);
    };

    var groupBy = function(files, key) {
        var groupedFiles = [];
        var tempDict = {};
        for (var i = 0; i < files.length; i++) {
            var value = files[i]['metadata'][key];
            if (value in tempDict)
                tempDict[value].push(files[i]);
            else tempDict[value] = [files[i]];
        }
        for (var key in tempDict) {
            groupedFiles.push(tempDict[key]);
        }
        return groupedFiles;
    };

    var orderBy = function(files, key, order) {
        var compareFunction = function(a, b) {
            if (a['metadata'][key].constructor === Number) {
                return a['metadata'][key] - b['metadata'][key];
            } else {
                var nameA = a['metadata'][key].toUpperCase();
                var nameB = b['metadata'][key].toUpperCase();
                if (nameA < nameB) {
                    return -1;
                }
                if (nameA > nameB) {
                    return 1;
                }
                return 0;
            }
        };

        files = files.sort(compareFunction);
        if (order == undefined || order == "asc")
            return files;
        else
            return files.reverse();
    };
  - |2-

    var setMetadata = function(file, metadata) {
        if (!('metadata' in file)) {
            file['metadata'] = {}
        }
        for (var key in metadata) {
            file['metadata'][key] = metadata[key];
        }
        return file
    };

    var inheritMetadata = function(o1, o2) {
        var commonMetadata = {};
        if (!Array.isArray(o2)) {
            o2 = [o2]
        }
        for (var i = 0; i < o2.length; i++) {
            var example = o2[i]['metadata'];
            for (var key in example) {
                if (i == 0)
                    commonMetadata[key] = example[key];
                else {
                    if (!(commonMetadata[key] == example[key])) {
                        delete commonMetadata[key]
                    }
                }
            }
        }
        if (!Array.isArray(o1)) {
            o1 = setMetadata(o1, commonMetadata)
        } else {
            for (var i = 0; i < o1.length; i++) {
                o1[i] = setMetadata(o1[i], commonMetadata)
            }
        }
        return o1;
    };

inputs:
- id: clipping_action
  label: Clipping action
  doc: |-
    The action that should be taken with clipped reads: 'X' means the reads and qualities should be trimmed at the clipped position; 'N' means the bases should be changed to Ns in the clipped region; and any integer means that the base qualities should be set to that value in the clipped region.
  type: string?
  inputBinding:
    prefix: --CLIPPING_ACTION
    position: 5
    shellQuote: false
  sbg:altPrefix: -CLIP_ACT
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'null'
- id: clipping_attribute
  label: Clipping attribute
  doc: |-
    The attribute that stores the position at which the SAM record should be clipped.
  type: string?
  inputBinding:
    prefix: --CLIPPING_ATTRIBUTE
    position: 5
    shellQuote: false
  sbg:altPrefix: -CLIP_ATTR
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'null'
- id: clipping_min_length
  label: Clipping min length
  doc: |-
    When performing clipping with the CLIPPING_ATTRIBUTE and CLIPPING_ACTION parameters, ensure that the resulting reads after clipping are at least CLIPPING_MIN_LENGTH bases long. If the original read is shorter than CLIPPING_MIN_LENGTH then the original read length will be maintained.
  type: int?
  inputBinding:
    prefix: --CLIPPING_MIN_LENGTH
    position: 5
    shellQuote: false
  sbg:altPrefix: -CLIP_MIN
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: '0'
- id: compress_outputs_per_rg
  label: Compress outputs per RG
  doc: |-
    Compress output FASTQ files per read group using gzip and append a .gz extension to the file names. Cannot be used in conjuction with argument(s) FASTQ (F) SECOND_END_FASTQ (F2) UNPAIRED_FASTQ (FU).
  type: boolean?
  inputBinding:
    prefix: --COMPRESS_OUTPUTS_PER_RG
    position: 5
    shellQuote: false
  sbg:altPrefix: -GZOPRG
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'false'
- id: compression_level
  label: Compression level
  doc: Compression level for all compressed files created (e.g. BAM and VCF).
  type: int?
  inputBinding:
    prefix: --COMPRESSION_LEVEL
    position: 5
    shellQuote: false
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: '2'
- id: include_non_pf_reads
  label: Include non PF reads
  doc: |-
    Include non-PF reads from the SAM file into the output FASTQ files. PF means 'passes filtering'. Reads whose 'not passing quality controls' flag is set are non-PF reads. See GATK Dictionary for more info.
  type: boolean?
  inputBinding:
    prefix: --INCLUDE_NON_PF_READS
    position: 5
    shellQuote: false
  sbg:altPrefix: -NON_PF
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'false'
- id: include_non_primary_alignments
  label: Include non primary alignments
  doc: |-
    If true, include non-primary alignments in the output. Support of non-primary alignments in SamToFastq is not comprehensive, so there may be exceptions if this is set to true and there are paired reads with non-primary alignments.
  type: boolean?
  inputBinding:
    prefix: --INCLUDE_NON_PRIMARY_ALIGNMENTS
    position: 5
    shellQuote: false
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'false'
- id: in_alignments
  label: Input SAM/BAM file
  doc: Input SAM/BAM file to extract reads from.
  type: File
  inputBinding:
    prefix: --INPUT
    position: 5
    shellQuote: false
  sbg:altPrefix: -I
  sbg:category: Required Arguments
  sbg:fileTypes: SAM, BAM
- id: interleave
  label: Interleave
  doc: |-
    Will generate an interleaved FASTQ if paired, each line will have /1 or /2 to describe which end it came from.
  type: boolean?
  inputBinding:
    prefix: --INTERLEAVE
    position: 5
    shellQuote: false
  sbg:altPrefix: -INTER
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'false'
- id: memory_overhead_per_job
  label: Memory overhead per job
  doc: |-
    This input allows a user to set the desired overhead memory when running a tool or adding it to a workflow. This amount will be added to the Memory per job in the Memory requirements section but it will not be added to the -Xmx parameter leaving some memory not occupied which can be used as stack memory (-Xmx parameter defines heap memory). This input should be defined in MB (for both the platform part and the -Xmx part if Java tool is wrapped).
  type: int?
  sbg:category: Platform Options
- id: memory_per_job
  label: Memory per job
  doc: |-
    This input allows a user to set the desired memory requirement when running a tool or adding it to a workflow. This value should be propagated to the -Xmx parameter too.This input should be defined in MB (for both the platform part and the -Xmx part if Java tool is wrapped).
  type: int?
  sbg:category: Platform Options
  sbg:toolDefaultValue: 2048 MB
- id: output_per_rg
  label: Output per RG
  doc: |-
    Output a FASTQ file per read group (two FASTQ files per read group if the group is paired). Cannot be used in conjuction with argument(s)FASTQ (F) SECOND_END_FASTQ (F2) UNPAIRED_FASTQ (FU).
  type: boolean?
  inputBinding:
    prefix: --OUTPUT_PER_RG
    position: 5
    shellQuote: false
  sbg:altPrefix: -OPRG
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'false'
- id: quality
  label: Quality
  doc: End-trim reads using the phred/bwa quality trimming algorithm and this quality.
  type: int?
  inputBinding:
    prefix: --QUALITY
    position: 5
    shellQuote: false
  sbg:altPrefix: -Q
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'null'
- id: re_reverse
  label: Re reverse
  doc: |-
    Re-reverse bases and qualities of reads with negative strand flag set before writing them to FASTQ.
  type:
  - 'null'
  - name: re_reverse
    type: enum
    symbols:
    - 'true'
    - 'false'
  inputBinding:
    prefix: --RE_REVERSE
    position: 5
    shellQuote: false
  sbg:altPrefix: -RC
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'true'
- id: read1_max_bases_to_write
  label: Read1 max bases to write
  doc: |-
    The maximum number of bases to write from read 1 after trimming. If there are fewer than this many bases left after trimming, all will be written. If this value is null then all bases left after trimming will be written.
  type: int?
  inputBinding:
    prefix: --READ1_MAX_BASES_TO_WRITE
    position: 5
    shellQuote: false
  sbg:altPrefix: -R1_MAX_BASES
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'null'
- id: read1_trim
  label: Read1 trim
  doc: The number of bases to trim from the beginning of read 1.
  type: int?
  inputBinding:
    prefix: --READ1_TRIM
    position: 5
    shellQuote: false
  sbg:altPrefix: -R1_TRIM
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: '0'
- id: read2_max_bases_to_write
  label: Read2 max bases to write
  doc: |-
    The maximum number of bases to write from read 2 after trimming. If there are fewer than this many bases left after trimming, all will be written. If this value is null then all bases left after trimming will be written.
  type: int?
  inputBinding:
    prefix: --READ2_MAX_BASES_TO_WRITE
    position: 5
    shellQuote: false
  sbg:altPrefix: -R2_MAX_BASES
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: 'null'
- id: read2_trim
  label: Read2 trim
  doc: The number of bases to trim from the beginning of read 2.
  type: int?
  inputBinding:
    prefix: --READ2_TRIM
    position: 5
    shellQuote: false
  sbg:altPrefix: -R2_TRIM
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: '0'
- id: rg_tag
  label: RG tag
  doc: The read group tag (PU or ID) to be used to output a FASTQ file per read group.
  type: string?
  inputBinding:
    prefix: --RG_TAG
    position: 5
    shellQuote: false
  sbg:altPrefix: -RGT
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: PU
- id: validation_stringency
  label: Validation stringency
  doc: |-
    Validation stringency for all SAM files read by this program. Setting stringency to silent can improve performance when processing a BAM file in which variable-length data (read, qualities, tags) do not otherwise need to be decoded.
  type:
  - 'null'
  - name: validation_stringency
    type: enum
    symbols:
    - STRICT
    - LENIENT
    - SILENT
  inputBinding:
    prefix: --VALIDATION_STRINGENCY
    position: 5
    shellQuote: false
  sbg:category: Optional Arguments
  sbg:toolDefaultValue: STRICT
- id: output_prefix
  label: Output prefix
  doc: Output file name prefix.
  type: string?
  sbg:category: Optional Arguments
- id: compress_outputs
  label: Compress output file(s)
  doc: Compress output file(s).
  type: boolean?
  sbg:category: Optional parameters
  sbg:toolDefaultValue: 'false'
- id: cpu_per_job
  label: CPU per job
  doc: CPU per job.
  type: int?
  sbg:category: Platform Options
  sbg:toolDefaultValue: '1'

outputs:
- id: out_reads
  label: Output FASTQ file(s)
  doc: Output FASTQ file(s).
  type: File[]?
  outputBinding:
    glob: |-
      ${
          var output_ext = inputs.compress_outputs ? ".fastq.gz" : ".fastq";
          var interleave = inputs.interleave;
          if (!inputs.outputs_by_readgroup)
          {
              if (interleave)
              {
                  return "*interleaved" + output_ext;
              }
              else
              {
                  return ["*pe_1" + output_ext, "*pe_2" + output_ext, "*se" + output_ext];
              }

          }
          else
          {
              return "*" + output_ext;
          }
      }
    outputEval: |-
      ${ 
          self = [].concat(self)
          
          function getPairedEnd(filename)
          {
              if (filename.lastIndexOf(".fastq") !== 0 && filename[filename.lastIndexOf(".fastq") - 2 ]=="_") 
              {
                  return filename[filename.lastIndexOf(".fastq") - 1 ];
              } 
              else 
              {
                  return "";
              }
          }
          
          var out = inheritMetadata(self,inputs.in_alignments);
          for (var i=0; i < out.length; i++)
          {
              out[i].metadata['paired_end'] = getPairedEnd(out[i].path);
          }
          
          return out;
      }
  sbg:fileTypes: FASTQ, FASTQ.GZ
- id: unmapped_reads
  label: Unpaired reads
  doc: Unpaired reads.
  type: File?
  outputBinding:
    glob: |-
      ${
          var output_ext = inputs.compress_outputs ? ".fastq.gz" : ".fastq";
          var interleave = inputs.interleave;
          if (!inputs.outputs_by_readgroup)
          {
              if (!interleave)
              {
                  return "*unpaired" + output_ext;
              }
              else 
              {
                   return ""; 
              }      
          }
        else {
             return "";  
        
        }
      }
    outputEval: $(inheritMetadata(self, inputs.in_alignments))
  sbg:fileTypes: FASTQ, FASTQ.GZ

baseCommand: []
arguments:
- prefix: ''
  position: 0
  valueFrom: |+
    ${
        var in_alignments = [].concat(inputs.in_alignments)[0];
        var output_ext    = inputs.compress_outputs ? ".fastq.gz" : ".fastq";
        var interleave    = inputs.interleave;
        var output_prefix = ''; 
        var cmd_line      = '';
        cmd_line          = "cmd='' && paired_end=`samtools view -h " + in_alignments.path + " | head -n 500000 | samtools view -Sc -f 0x1 -`";

      if (!inputs.outputs_by_readgroup)
        {
            if (inputs.output_prefix)
            {
                output_prefix = inputs.output_prefix;
            }
            else
            {
                if (in_alignments.metadata && in_alignments.metadata.sample_id)
                {
                    output_prefix = in_alignments.metadata.sample_id;
                }
                else
                {
                    output_prefix = in_alignments.path.split('/').pop().split('.')[0];
                }          
            }           
            
            cmd_line = cmd_line + " && if [ $paired_end != 0 ]; then cmd='--FASTQ " + output_prefix; 
            
            if (interleave)
            {
                cmd_line = cmd_line + ".interleaved" + output_ext + "';";
            }
            else
            {
                cmd_line = cmd_line + ".pe_1" + output_ext;
                cmd_line = cmd_line + " --SECOND_END_FASTQ " + output_prefix + ".pe_2" + output_ext;
                cmd_line = cmd_line + " --UNPAIRED_FASTQ " + output_prefix + ".unpaired" + output_ext + "';";
            }        
            cmd_line = cmd_line + " else cmd='--FASTQ " + output_prefix  + ".se" + output_ext + "'; fi;";
            return cmd_line;
        }
        else
        {
            return "cmd='--OUTPUT_DIR .'";
        }
    }

  shellQuote: false
- prefix: ''
  position: 1
  valueFrom: /opt/gatk
  shellQuote: false
- prefix: ''
  position: 2
  valueFrom: |-
    ${
        if (inputs.memory_per_job)
        {
            return "--java-options";
        }
        else {
            return '';
        }
        
    }
  shellQuote: false
- prefix: ''
  position: 3
  valueFrom: |-
    ${
        if (inputs.memory_per_job) {
            return '\"-Xmx'.concat(inputs.memory_per_job, 'M') + '\"';
        }
        else {
            return "";
        }
    }
  shellQuote: false
- prefix: ''
  position: 4
  valueFrom: SamToFastq
  shellQuote: false
- prefix: ''
  position: 6
  valueFrom: "${\n        return '$cmd';\n}"
  shellQuote: false
id: h-77955281/h-35b19fa7/h-79a8930d/0
sbg:appVersion:
- v1.0
sbg:categories:
- Utilities
- BAM Processing
sbg:content_hash: a21e1194e724a1f17bceabd4d2040324713c2a5c63896adcebbc777578b2bfef5
sbg:contributors:
- uros_sipetic
- nens
- veliborka_josipovic
sbg:createdBy: uros_sipetic
sbg:createdOn: 1552663400
sbg:id: h-77955281/h-35b19fa7/h-79a8930d/0
sbg:image_url:
sbg:latestRevision: 15
sbg:license: Open source BSD (3-clause) license
sbg:links:
- id: https://software.broadinstitute.org/gatk/
  label: Homepage
- id: https://github.com/broadinstitute/gatk/
  label: Source Code
- id: |-
    https://github.com/broadinstitute/gatk/releases/download/4.1.0.0/gatk-4.1.0.0.zip
  label: Download
- id: https://www.ncbi.nlm.nih.gov/pubmed?term=20644199
  label: Publications
- id: |-
    https://software.broadinstitute.org/gatk/documentation/tooldocs/4.1.0.0/picard_sam_SamToFastq.php
  label: Documentation
sbg:modifiedBy: veliborka_josipovic
sbg:modifiedOn: 1561548030
sbg:project: uros_sipetic/gatk-4-1-0-0-demo
sbg:projectName: GATK 4.1.0.0 - Demo
sbg:publisher: sbg
sbg:revision: 15
sbg:revisionNotes: Added glob for single end output fastq
sbg:revisionsInfo:
- sbg:modifiedBy: uros_sipetic
  sbg:modifiedOn: 1552663400
  sbg:revision: 0
  sbg:revisionNotes: Copy of veliborka_josipovic/gatk-4-1-0-0-toolkit-dev/gatk-samtofastq-4-1-0-0/19
- sbg:modifiedBy: uros_sipetic
  sbg:modifiedOn: 1552663734
  sbg:revision: 1
  sbg:revisionNotes: Copy of veliborka_josipovic/gatk-4-1-0-0-toolkit-dev/gatk-samtofastq-4-1-0-0/20
- sbg:modifiedBy: veliborka_josipovic
  sbg:modifiedOn: 1554492676
  sbg:revision: 2
  sbg:revisionNotes: Copy of veliborka_josipovic/gatk-4-1-0-0-toolkit-dev/gatk-samtofastq-4-1-0-0/27
- sbg:modifiedBy: veliborka_josipovic
  sbg:modifiedOn: 1554493243
  sbg:revision: 3
  sbg:revisionNotes: Copy of veliborka_josipovic/gatk-4-1-0-0-toolkit-dev/gatk-samtofastq-4-1-0-0/28
- sbg:modifiedBy: veliborka_josipovic
  sbg:modifiedOn: 1554720826
  sbg:revision: 4
  sbg:revisionNotes: Copy of veliborka_josipovic/gatk-4-1-0-0-toolkit-dev/gatk-samtofastq-4-1-0-0/29
- sbg:modifiedBy: veliborka_josipovic
  sbg:modifiedOn: 1554999298
  sbg:revision: 5
  sbg:revisionNotes: Copy of veliborka_josipovic/gatk-4-1-0-0-toolkit-dev/gatk-samtofastq-4-1-0-0/30
- sbg:modifiedBy: nens
  sbg:modifiedOn: 1557484228
  sbg:revision: 6
  sbg:revisionNotes: Updated Description
- sbg:modifiedBy: nens
  sbg:modifiedOn: 1557745933
  sbg:revision: 7
  sbg:revisionNotes: ''
- sbg:modifiedBy: nens
  sbg:modifiedOn: 1557918579
  sbg:revision: 8
  sbg:revisionNotes: 'v32: [input]'
- sbg:modifiedBy: nens
  sbg:modifiedOn: 1557919927
  sbg:revision: 9
  sbg:revisionNotes: v5->update
- sbg:modifiedBy: nens
  sbg:modifiedOn: 1558002424
  sbg:revision: 10
  sbg:revisionNotes: output required
- sbg:modifiedBy: nens
  sbg:modifiedOn: 1558015833
  sbg:revision: 11
  sbg:revisionNotes: unmapped_reads required
- sbg:modifiedBy: nens
  sbg:modifiedOn: 1558022954
  sbg:revision: 12
  sbg:revisionNotes: strict js for glob
- sbg:modifiedBy: nens
  sbg:modifiedOn: 1558023482
  sbg:revision: 13
  sbg:revisionNotes: strict javascript for unmapped_reads
- sbg:modifiedBy: nens
  sbg:modifiedOn: 1558354170
  sbg:revision: 14
  sbg:revisionNotes: return '';
- sbg:modifiedBy: veliborka_josipovic
  sbg:modifiedOn: 1561548030
  sbg:revision: 15
  sbg:revisionNotes: Added glob for single end output fastq
sbg:sbgMaintained: false
sbg:toolAuthor: Broad Institute
sbg:toolkit: GATK
sbg:toolkitVersion: 4.1.0.0
sbg:validationErrors: []
